CS 2200 Spring 2018
Project 4

Name:
GT Username:

Problem 1B
----------

# 1 Processor
Context Switches: 99
Total execution time: 67.6 s
Total time spent in READY state: 389.9 s

# 2 Processor
Context Switches: 110
Total execution time: 35.9 s
Total time spent in READY state: 80.8 s

# 4 Processor
Context Switches: 183
Total execution time: 33.1 s
Total time spent in READY state: 0.1 s

# 8 Processor
Context Switches: 184
Total execution time: 33.5 s
Total time spent in READY state: 0.0 s

When it goes from 1 processor to 2 processors, the execution time halves. However, any increases to cpu count afterwards do not effect execution time, only decreasing time spent in the READY queue. From this we can conclude that the bottleneck of this problem is in the IO and not the CPU count.
Comparing the 4 processors and 2 processor times show that when there are 4 processors, as soon as any process wakes up from IO, there exists an IDLE CPU which can instantly run the process. This is also proven when looking at the Gantt chart for 8 processors: there are very little time frames in which 5 processes are being run simultaneously, and no time frames have more than 5 processes.


Problem 2B
----------

Context Switches: 136
Total execution time: 67.6 s
Total time spent in READY state: 325.4 s

Context Switches: 161
Total execution time: 67.6 s
Total time spent in READY state: 314.5 s

Context Switches: 203
Total execution time: 67.6 s
Total time spent in READY state: 298.8 s

Context Switches: 362
Total execution time: 67.5 s
Total time spent in READY state: 285.2 s

Problem 3B
----------

/* Fix me */

